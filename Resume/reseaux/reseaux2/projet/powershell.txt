
------------------------------------------------------------------------------------------------------------------
Remove-ADOrganizationalUnit -Identity "OU=INFORMATIQUE,DC=ETU1662413,DC=local" -Recursive


------------------------------------------------------------------------------------------------------------------

## Création de l'unité d'organisation "Informatique" directement sous le domaine
New-ADOrganizationalUnit -Name "Informatique" -Path "DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Création de l'unité d'organisation "Groupes" sous l'unité d'organisation "Informatique"
New-ADOrganizationalUnit -Name "Groupes" -Path "OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Création de l'unité d'organisation "Ordinateurs" sous l'unité d'organisation "Informatique"
New-ADOrganizationalUnit -Name "Ordinateurs" -Path "OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Ajout d'un ordinateur fictif à l'unité d'organisation "Ordinateurs"
New-ADComputer -Name "NomDeLordinateur" -Path "OU=Ordinateurs,OU=Informatique,DC=ETU1662413,DC=local"

# Création de l'unité d'organisation "utilisateurs" sous l'unité d'organisation "Informatique"
New-ADOrganizationalUnit -Name "Utilisateurs" -Path "OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Les groupes du département "Informatique"
$groupes = @(
    "Concepteurs WEB",
    "Programmeurs Android",
    "Programmeurs Python",
    "Techniciens du réseau",
    "Testeurs de logiciels Android",
    "Testeurs de logiciels Python"
)

# Création des unités d'organisation pour chaque groupe et ses employés et gestionnaires
foreach ($groupe in $groupes) {
    # Create the main group OU under "Informatique"
    New-ADOrganizationalUnit -Name "$groupe - Utilisateurs" -Path "OU=Utilisateurs,OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

    # Create the main group OU under "Informatique"
        New-ADGroup -Name "$groupe - Groupes" -GroupScope Global -Path "OU=Groupes,OU=Informatique,DC=ETU1662413,DC=local"


    # Create an OU for employees under each group
    New-ADOrganizationalUnit -Name "Employes" -Path "OU=$groupe - Utilisateurs,OU=Utilisateurs,OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

    # Create an OU for managers under each group
    New-ADOrganizationalUnit -Name "Gestionnaires" -Path "OU=$groupe - Utilisateurs,OU=Utilisateurs,OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false
}

-----------------------------------------------------------------------------------------------------------------------------
# Import user data from CSV
$utilisateurs = Import-Csv "E:\_S1_INFO\PRATIQUE_ETU.csv" -Delimiter ";"

foreach ($utilisateur in $utilisateurs) {
    $matricule = $utilisateur.MATRICULE
    $nomGroupe = ""

    # Determine the group and OU based on the matricule number
    if ($matricule -ge 10001 -and $matricule -le 19999) {
        $nomGroupe = "Employes/Programmeurs Python/Utilisateurs"
    } elseif ($matricule -eq 10000) {
        $nomGroupe = "Gestionnaires/Programmeurs Python/Utilisateurs"
    } elseif ($matricule -ge 20001 -and $matricule -le 29999) {
        $nomGroupe = "Employes/Programmeurs Android/Utilisateurs"
    } elseif ($matricule -eq 20000) {
        $nomGroupe = "Gestionnaires/Programmeurs Android/Utilisateurs"
    } elseif ($matricule -ge 30001 -and $matricule -le 39999) {
        $nomGroupe = "Employes/Techniciens du réseau/Utilisateurs"
    } elseif ($matricule -eq 30000) {
        $nomGroupe = "Gestionnaires/Techniciens du réseau/Utilisateurs"
    } elseif ($matricule -ge 40001 -and $matricule -le 49999) {
        $nomGroupe = "Employes/Concepteurs WEB/Utilisateurs"
    } elseif ($matricule -eq 40000) {
        $nomGroupe = "Gestionnaires/Concepteurs WEB/Utilisateurs"
    } elseif ($matricule -ge 50001 -and $matricule -le 59999) {
        $nomGroupe = "Employes/Testeurs de logiciels Python/Utilisateurs"
    } elseif ($matricule -eq 50000) {
        $nomGroupe = "Gestionnaires/Testeurs de logiciels Python/Utilisateurs"
    } elseif ($matricule -ge 60001 -and $matricule -le 69999) {
        $nomGroupe = "Employes/Testeurs de logiciels Android/Utilisateurs"
    } elseif ($matricule -eq 60000) {
        $nomGroupe = "Gestionnaires/Testeurs de logiciels Android/Utilisateurs"
    }

    if (![string]::IsNullOrWhiteSpace($nomGroupe)) {
        # Split the group name to extract the OU path parts
        $groupParts = $nomGroupe -split "/"
        $ouPath = "OU=$groupParts[2],OU=$groupParts[1],OU=$groupParts[0],OU=Informatique,DC=ETU1662413,DC=local"
	Write-Output $ouPath
        $password = ConvertTo-SecureString "AAAaaa111" -AsPlainText -Force
            New-ADUser -Name $utilisateur.MATRICULE `
             -SamAccountName $utilisateur.NOM `
             -UserPrincipalName "$($utilisateur.NOM)@ETU1662413.local" `
             -Path $ouPath `
             -GivenName $utilisateur.NOM `
             -Surname $utilisateur.PRENOM `
             -DisplayName "$($utilisateur.PRENOM) $($utilisateur.NOM)" `
             -AccountPassword $password `
             -PasswordNeverExpires $true `
             -Enabled $true
        
    }
}
------------------------------------------------------------------------------------------
# Define base variables
$rootFolder = "E:\_S1_PERSO"
$departmentFolder = "E:\_S1_INFO"
$namespacePath = "\\YourDomain\DFSinformatique"

# Define groups and permissions
$administratorsGroup = "Administrateurs"
$systemGroup = "SYSTEM"
$employeesGroup = "Employees"
$managersGroup = "Managers"

# Ensure the root and department folders exist
New-Item -Path $rootFolder, $departmentFolder -ItemType Directory -Force

# Set base NTFS permissions on the root folder
icacls $rootFolder /reset
icacls $rootFolder /grant "Administrators:(OI)(CI)F" /grant "SYSTEM:(OI)(CI)F" /grant "CREATOR OWNER:(OI)(CI)M" /grant "Employees:(RX)" /grant "Managers:(RX)" /inheritance:r

# Import user data from CSV and create personal folders
$utilisateurs = Import-Csv "E:\_S1_INFO\PRATIQUE_ETU.csv" -Delimiter ";"
foreach ($user in $utilisateurs) {
    $userFolder = Join-Path -Path $rootFolder -ChildPath $user.NOM
    New-Item -Path $userFolder -ItemType Directory -Force
    icacls $userFolder /reset /grant "$user.NOM:(OI)(CI)M" /grant "$administratorsGroup:(OI)(CI)F" /inheritance:r

    # Share each user's personal folder
    New-SmbShare -Name $user.NOM -Path $userFolder -FullAccess $administratorsGroup
    Set-SmbShare -Name $user.NOM -FolderEnumerationMode AccessBased -Confirm:$false
}

# Share the entire personal folder root
New-SmbShare -Name "PersonalFolders" -Path $rootFolder -FullAccess $administratorsGroup
Set-SmbShare -Name "PersonalFolders" -FolderEnumerationMode AccessBased -Confirm:$false

# Setup departmental folders in DFS
$departmentFolders = @("CONCEPTEURS_WEB", "PROGRAMMATION_ANDROID", "PROGRAMMATION_PYTHON", "TECHNICIENS", "TESTEURS_ANDROID", "TESTEURS_PYTHON")
foreach ($folder in $departmentFolders) {
    $folderPath = Join-Path -Path $departmentFolder -ChildPath $folder
    New-Item -Path $folderPath -ItemType Directory -Force
    New-DfsnFolder -Path "$namespacePath\$folder" -TargetPath $folderPath

    # Optional: Add additional server targets if needed
    # New-DfsnFolderTarget -Path "$namespacePath\$folder" -TargetPath "\\Server2\$folder"
}


# Define base variables
$rootFolder = "E:\_S1_PERSO"
$departmentFolder = "E:\_S1_INFO"
$namespacePath = "\\YourDomain\DFSinformatique"

# Define groups and permissions
$administratorsGroup = "Administrateurs"
$systemGroup = "SYSTEM"
$employeesGroup = "Employees"
$managersGroup = "Managers"

# Ensure the root and department folders exist
New-Item -Path $rootFolder, $departmentFolder -ItemType Directory -Force

# Set base NTFS permissions on the root folder
icacls $rootFolder /reset
icacls $rootFolder /grant "Administrators:(OI)(CI)F" /grant "SYSTEM:(OI)(CI)F" /grant "CREATOR OWNER:(OI)(CI)M" /grant "Employees:(RX)" /grant "Managers:(RX)" /inheritance:r

# Import user data from CSV and create personal folders
$utilisateurs = Import-Csv "E:\_S1_INFO\PRATIQUE_ETU.csv" -Delimiter ";"
foreach ($user in $utilisateurs) {
    $userFolder = Join-Path -Path $rootFolder -ChildPath $user.NOM
    New-Item -Path $userFolder -ItemType Directory -Force

    # Correctly format the command to avoid parsing errors
    icacls $userFolder /reset
    icacls $userFolder /grant "${user.NOM}:(OI)(CI)M" /grant "${administratorsGroup}:(OI)(CI)F" /inheritance:r
}

# Share the entire personal folder root
New-SmbShare -Name "PersonalFolders" -Path $rootFolder -FullAccess $administratorsGroup
Set-SmbShare -Name "PersonalFolders" -FolderEnumerationMode AccessBased -Confirm:$false

New-SmbShare -Name "DepartementFolder" -Path $departmentFolder -FullAccess $administratorsGroup
Set-SmbShare -Name "DepartementFolder" -FolderEnumerationMode AccessBased -Confirm:$false
