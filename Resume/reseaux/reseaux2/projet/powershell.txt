
------------------------------------------------------------------------------------------------------------------
Remove-ADOrganizationalUnit -Identity "OU=INFORMATIQUE,DC=ETU1662413,DC=local" -Recursive


------------------------------------------------------------------------------------------------------------------

## Création de l'unité d'organisation "Informatique" directement sous le domaine
New-ADOrganizationalUnit -Name "Informatique" -Path "DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Création de l'unité d'organisation "Groupes" sous l'unité d'organisation "Informatique"
New-ADOrganizationalUnit -Name "Groupes" -Path "OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Création de l'unité d'organisation "Ordinateurs" sous l'unité d'organisation "Informatique"
New-ADOrganizationalUnit -Name "Ordinateurs" -Path "OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Ajout d'un ordinateur fictif à l'unité d'organisation "Ordinateurs"
New-ADComputer -Name "NomDeLordinateur" -Path "OU=Ordinateurs,OU=Informatique,DC=ETU1662413,DC=local"

# Création de l'unité d'organisation "utilisateurs" sous l'unité d'organisation "Informatique"
New-ADOrganizationalUnit -Name "Utilisateurs" -Path "OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

# Les groupes du département "Informatique"
$groupes = @(
    "Concepteurs WEB",
    "Programmeurs Android",
    "Programmeurs Python",
    "Techniciens du réseau",
    "Testeurs de logiciels Android",
    "Testeurs de logiciels Python"
)

# Création des unités d'organisation pour chaque groupe et ses employés et gestionnaires
foreach ($groupe in $groupes) {
    # Create the main group OU under "Informatique"
    New-ADOrganizationalUnit -Name $groupe" -Path "OU=Utilisateurs,OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

    # Create the main group OU under "Informatique"
        New-ADGroup -Name "$groupe" -GroupScope Global -Path "OU=Groupes,OU=Informatique,DC=ETU1662413,DC=local"


    # Create an OU for employees under each group
    New-ADOrganizationalUnit -Name "Employes" -Path "OU=$groupe - Utilisateurs,OU=Utilisateurs,OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false

    # Create an OU for managers under each group
    New-ADOrganizationalUnit -Name "Gestionnaires" -Path "OU=$groupe - Utilisateurs,OU=Utilisateurs,OU=Informatique,DC=ETU1662413,DC=local" -ProtectedFromAccidentalDeletion $false
}


# Ajouter les utilisateurs aux groupes et à leurs unités d'organisation respectives
$utilisateurs = Import-Csv "E:\_S1_INFO\PRATIQUE_ETU.csv" -Delimiter ";"

foreach ($utilisateur in $utilisateurs) {
    $matricule = $utilisateur.MATRICULE
    $nomGroupe = ""
    $ouPath = ""

    if ($matricule -ge 10001 -and $matricule -le 19999) {
        $nomGroupe = "Utilisateurs/Programmeurs Python/Employes"
    }
    elseif ($matricule -eq 10000) {
        $nomGroupe =  "Utilisateurs/Programmeurs Python/Gestionnaires"
    }
    elseif ($matricule -ge 20001 -and $matricule -le 29999) {
        $nomGroupe = "Utilisateurs/Programmeurs Android/Employes"
    }
    elseif ($matricule -eq 20000) {
        $nomGroupe = "Utilisateurs/Programmeurs Android/Gestionnaires"
    }
    elseif ($matricule -ge 30001 -and $matricule -le 39999) {
        $nomGroupe = "Utilisateurs/Techniciens du réseau/Employes"
    }
    elseif ($matricule -eq 30000) {
        $nomGroupe = "Utilisateurs/Techniciens du réseau/Gestionnaires"
    }
    elseif ($matricule -ge 40001 -and $matricule -le 49999) {
        $nomGroupe = "Utilisateurs/Concepteurs WEB/Employes"
    }
    elseif ($matricule -eq 40000) {
        $nomGroupe = "Utilisateurs/Concepteurs WEB/Gestionnaires"
    }
	elseif ($matricule -ge 50001 -and $matricule -le 59999) {
        $nomGroupe = "Utilisateurs/Testeurs de logiciels Python/Employes"
    }
    elseif ($matricule -eq 50000) {
        $nomGroupe = "Utilisateurs/Testeurs de logiciels Python/Gestionnaires"
    }
    elseif ($matricule -ge 60001 -and $matricule -le 69999) {
        $nomGroupe = "Utilisateurs/Testeurs de logiciels Android/Employes"
    }
    elseif ($matricule -eq 60000) {
        $nomGroupe = "Utilisateurs/Testeurs de logiciels Android/Gestionnaires"
    }
    
    
   if (![string]::IsNullOrWhiteSpace($nomGroupe)) {
    # Split the group name to extract the OU path parts
    $groupParts = $nomGroupe -split "/"
    $ouPath = "OU=$($groupParts[2]),OU=$($groupParts[1]),OU=$($groupParts[0]),OU=Informatique,DC=ETU1662413,DC=local"
    
    # Output the path for debugging
    Write-Output "Attempting to create user in OU: $ouPath"

    $password = ConvertTo-SecureString "AAAaaa111" -AsPlainText -Force

        New-ADUser -Name $utilisateur.NOM `
         -SamAccountName $utilisateur.NOM `
         -UserPrincipalName "$($utilisateur.NOM)@ETU1662413.local" `
         -Path $ouPath `
         -GivenName $utilisateur.NOM `
         -Surname $utilisateur.PRENOM `
         -DisplayName "$($utilisateur.PRENOM) $($utilisateur.NOM)" `
         -AccountPassword $password `
         -PasswordNeverExpires $true `
         -Enabled $true
   
}
}


#--------------------------------------------------------------------------------------
# Define variables
$personalFolderRoot = "E:\_S1_PERSO"
$administratorsGroup = "Administrateurs"
$systemGroup = "SYSTEM"
$personalFolderShareName = "PersonalFolders"
$personalFolderSharePath = "$personalFolderRoot\$personalFolderShareName"
$personalFolderAcl = "informatique" 
$personalFolderPermissions = "Modify"
$administratorsPermissions = "FullControl"
$systemPermissions = "FullControl"

# Set NTFS permissions on the personal folder root
icacls.exe $personalFolderRoot /inheritance:r /grant "$($administratorsGroup):$administratorsPermissions" `
    /grant "$($systemGroup):$systemPermissions" /grant "CREATOR OWNER:(OI)(CI)M" /T

# Create personal folders for each user
$utilisateurs | ForEach-Object {
    $userName = $_.NOM
    $userPersonalFolderPath = Join-Path -Path $personalFolderRoot -ChildPath $userName
    New-Item -Path $userPersonalFolderPath -ItemType Directory

    # Set NTFS permissions on the user's personal folder
    icacls.exe $userPersonalFolderPath /inheritance:r /grant "$($_.NOM):$personalFolderPermissions" /T
}

# Share the personal folder root
New-SmbShare -Name $personalFolderShareName -Path $personalFolderSharePath -FullAccess "Administrateurs"

# Configure share permissions
Set-SmbShare -Name $personalFolderShareName -FolderEnumerationMode AccessBased -Confirm:$false
